{"version":3,"sources":["webpack://dedux/webpack/universalModuleDefinition","webpack://dedux/webpack/bootstrap","webpack://dedux/./src/symbols.js","webpack://dedux/./src/validators.js","webpack://dedux/./src/functions/checkForEntities.js","webpack://dedux/./src/normalizedDataCreation.js","webpack://dedux/./src/normalizedDataReplacement.js","webpack://dedux/./src/normalizedState.js","webpack://dedux/./src/createSchema.js","webpack://dedux/./node_modules/deep-equal/lib/is_arguments.js","webpack://dedux/./node_modules/deep-equal/lib/keys.js","webpack://dedux/./node_modules/deep-equal/index.js","webpack://dedux/./src/proxy.js","webpack://dedux/./src/functions/findPath.js","webpack://dedux/./src/functions/updateAtPath.js","webpack://dedux/./src/functions/actionTypeParser.js","webpack://dedux/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","id","Symbol","foreignKey","proxy","entity","getNormalized","getSchema","getRootData","replace","deepEqual","Validator","_classCallCheck","this","_entity","type","_typeof","Array","isArray","data","typeOf","entries","map","e","val","obj","isEntity","keysAndSymbols","getOwnPropertySymbols","concat","getOwnPropertyNames","length","tag","validateStringTag","Error","JSON","stringify","toUpperCase","includes","entity1","entity2","strict","entities","forEach","_ref","_ref2","_slicedToArray","key","undefined","V","checkForEntities","state","hasEntities","arguments","values","reduce","acc","NormalizedDataCreator","schema","rootEntity","_schema","_rootEntity","_normalized","newTables","Reflect","ownKeys","entityType","getName","newId","_defineProperty","proxyData","proxyId","_extends","normalizedData","normalizer","process","collection","parents","path","elements","getElements","isVacentTag","addToTable","addProxy","_ref3","_ref4","getNormalizedData","secretSymbols","NormalizedDataReplacement","oldNormalizedData","oldRoot","_old","_new","_oldRoot","_proxyRemovalList","Set","fk","target","newEntity","primaryKey","oldValue","newValue","merge","addToProxyRemovalList","_path","_toArray","remainingPath","slice","merged","firstHalf","secondHalf","_toConsumableArray","insertAt","mergeAtPath","addNewEntity","_this","nextEntity","getEntity","filter","add","_this2","getProxyParents","pId","has","addParentProxies","keys","proxiesToRemove","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","err","return","newProxyTable","table","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_this3","_ref5","_ref6","tableName","newNorm","_newNorm$getPath2","getPath","_newNorm$getPath2$","entityId","targetEntity","clearProxies","mergeInOldData","getNewData","getNewRoot","NormalizedState","proxObj","_replace2","SchemaCreator","entityObj","validateTag","checkForInconsistencies","vacantEntity","tables","checkForUndefinedEntities","schemaCreator","addVacantType","addType","supportsArgumentsClass","toString","supported","unsupported","propertyIsEnumerable","shim","push","pSlice","objectKeys","isArguments","actual","expected","opts","Date","getTime","a","b","isUndefinedOrNull","isBuffer","ka","kb","sort","objEquiv","x","copy","dataProxy","schemaProxy","normalizedProxy","allowedKeyList","normalized","createSchema","normalizeState","StateProxy","proxyType","_proxyType","_normalizedData","_getProxy","getRoot","_createProxy","cachedProxy","getProxyFromCache","setProxyInCache","allowedKeys","Proxy","prop","_updateFn","_lookupValue","hiddenKeys","linkedEntity","normalData","paths","dfs","prevKey","callback","endsWith","updateAtPath","newObj","assign","actionType","verb","action","startsWith","actionTypeParser","findPath","processState","split","insert","index","update","predicate","elem","idx","del","switch_array","where","el","set","switch_object","_actionTypeParser","arr","number","bool","k","v","newState","subObj","_ref7","_ref8","handleAction","config","required","checkPath","payload","validatePayload","Actions","closedState","container","Container","deduce","reducer","initialState","shouldNormalize","proxied","switch_number","switch_boolean","switch_string","actions","D"],"mappings":"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","file":"dedux.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"dedux\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dedux\"] = factory();\n\telse\n\t\troot[\"dedux\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","//internal symbols\nconst id = Symbol('id')\nconst foreignKey = Symbol('foreign key')\nconst proxy = Symbol('proxy')\n\n//tagging symbol\nconst entity = Symbol('entity')\n\n//data access symbols\nconst getNormalized = Symbol('get-normalized')\nconst getSchema = Symbol('get-schema')\nconst getRootData = Symbol('root data')\n\n//method access symbols\nconst replace = Symbol('replace')\n\nmodule.exports = {\n    entity,\n    id,\n    foreignKey,\n    getNormalized,\n    getSchema,\n    getRootData,\n    replace,\n    proxy,\n}\n","const deepEqual = require('deep-equal')\n\nclass Validator {\n    constructor(entity) {\n        this._entity = entity\n    }\n\n    typeOf(value) {\n        const type = typeof value\n        if (type !== 'object') return type\n        if (value === null) return 'null'\n        if (Array.isArray(value)) return 'array'\n        return 'object'\n    }\n\n    getElements(data) {\n        if (this.typeOf(data) === 'object') return Object.entries(data)\n        else if (this.typeOf(data) === 'array') return data.map((e, i) => [i, e])\n    }\n\n    getName(name) {\n        if (this.typeOf(name) === 'string') return name\n        else return (name.name)\n    }\n\n    isEntity(val) {\n        return !!(this.typeOf(val) === 'object' && val[this._entity])\n    }\n\n    isVacentTag(obj) {\n        if (!this.isEntity(obj)) return false\n        const keysAndSymbols = Object.getOwnPropertySymbols(obj).concat(Object.getOwnPropertyNames(obj))\n        return keysAndSymbols.length === 1 && keysAndSymbols[0] === this._entity\n    }\n\n    validateTag(tag) {\n        if (this.typeOf(tag) === 'string') {\n            return validateStringTag(tag)\n        } else if (this.typeOf(tag) === 'object') {\n            if (this.typeOf(tag.name) === 'string') return validateStringTag(tag.name)\n            else throw new Error(`Invalid Tag. \\n\n            ${JSON.stringify(tag)} \\n\n            Tag must contain a 'name' property with a string value`)\n        }\n        throw new Error(`Invalid Tag. \\n\n         ${tag} \\n\n         Tag must be a string or an object with a 'name' property and a string value`)\n\n        function validateStringTag(tag) {\n            if (tag[0].toUpperCase() === tag[0]) return\n            const validPrimitives = [\n                'number',\n                'string',\n                'boolean',\n                'function',\n                'null',\n                'undefined',\n                'object',\n                'array'\n            ]\n            if (!validPrimitives.includes(tag))\n                throw new Error(`Invalid Tag. ${tag} is not a valid primitive.`)\n        }\n    }\n\n    checkForInconsistencies(entity1, entity2, name) {\n        if (!entity1 || !entity2) return\n        if (!deepEqual(entity1, entity2, { strict: true }))\n            throw new Error(`Conflicting Schema definitions for ${name}. \\n\n        ${JSON.stringify(entity1)} \\n\n        does not match \\n\n        ${JSON.stringify(entity2)}`)\n    }\n\n    checkForUndefinedEntities(entities) {\n        Object.entries(entities).forEach(([key, value]) => {\n            if (value === undefined) throw new Error(`Could not infer Schema on ${key}`)\n        })\n    }\n}\n\n\nmodule.exports = Validator","const { replace, entity } = require('../symbols')\nconst Validator = require('../validators')\nconst V = new Validator(entity)\n\nfunction checkForEntities(state, hasEntities = false) {\n    if (V.typeOf(state) === 'object') {\n        if (V.isEntity(state)) return true\n        return Object.values(state).reduce((acc, value) => {\n            return acc || checkForEntities(value, hasEntities)\n        }, hasEntities)\n    }\n    if (V.typeOf(state) === 'array') {\n        return state.reduce((acc, value) => {\n            return acc || checkForEntities(value, hasEntities)\n        }, hasEntities)\n    }\n    else return false\n}\n\nmodule.exports = checkForEntities","const { entity, id, foreignKey, proxy } = require('./symbols')\nconst Validator = require('./validators')\nconst V = new Validator(entity)\n\nclass NormalizedDataCreator {\n    constructor(schema, rootEntity) {\n        this._schema = schema\n        this._rootEntity = rootEntity\n        this._normalized = newTables(schema)\n    }\n\n    addToTable(data) {\n        const entityType = V.getName(data[entity])\n        const newId = this._schema[entityType][id]++\n        data[id] = newId\n        this._normalized[entityType][newId] = data\n\n        return { [foreignKey]: newId, entityType }\n    }\n\n    addProxy(data, proxyData) {\n        const proxyId = this._schema[proxy][id]++\n        data[proxy] = proxyId\n        this._normalized[proxy][proxyId] = { ...proxyData, [id]: proxyId }\n        return proxyId\n    }\n\n    getNormalizedData() {\n        return {\n            normalizedData: this._normalized,\n            rootEntity: this._rootEntity,\n            schema: this._schema,\n        }\n    }\n}\n\nfunction newTables(schema) {\n    let newTables = {}\n    Reflect.ownKeys(schema).forEach(name => newTables[name] = {})\n    return newTables\n}\n\n//exported\nfunction normalizeState(schema, state) {\n    const normalizer = new NormalizedDataCreator(schema, state) //performs side effects\n    process(state, { parents: {}, path: [] })\n    return normalizer.getNormalizedData()\n\n    function process(state, { parents, path }) {\n        const elements = V.getElements(state)\n        if (!elements) return state\n        if (isVacantArray(state)) return []\n        const foreignKey = V.isEntity(state) && normalizer.addToTable(state) //side effect\n        if (foreignKey) path = [foreignKey]\n        const proxyId = normalizer.addProxy(state, { parents, path }) //side effect\n\n        parents = { ...parents, [proxyId]: true }\n        elements.forEach(([key, value]) => {\n            state[key] = process(value, { parents, path: [...path, key] })\n        })\n\n        return foreignKey || state\n    }\n}\n\nfunction isVacantArray(collection) {\n    return V.typeOf(collection === 'array') && V.isVacentTag(collection[0])\n}\n\nmodule.exports = normalizeState\n","const { entity, id, foreignKey, proxy } = require('./symbols')\nconst secretSymbols = [entity, id, foreignKey, proxy]\nconst Validator = require('./validators')\nconst V = new Validator(entity)\n\n\nclass NormalizedDataReplacement {\n    constructor(oldNormalizedData, oldRoot) {\n        this._old = oldNormalizedData\n        this._new = {}\n        this._oldRoot = oldRoot\n        this._proxyRemovalList = new Set()\n    }\n\n    getEntity(entityType, fk) {\n        return this._old[entityType][fk]\n    }\n\n    getPath(target) {\n        const proxyId = target[proxy]\n        return this._old[proxy][proxyId].path\n    }\n\n    addNewEntity(newEntity) {\n        const type = V.getName(newEntity[entity])\n        const primaryKey = newEntity[id]\n        if (!this._new[type]) this._new[type] = {}\n        this._new[type][primaryKey] = newEntity\n    }\n\n    mergeAtPath(path, oldValue, newValue) {\n        if (path.length === 0) return this.merge(oldValue, newValue)\n        this.addToProxyRemovalList(oldValue)\n        let [key, ...remainingPath] = path\n        const merged = insertAt(key, oldValue, this.mergeAtPath(remainingPath, oldValue[key], newValue))\n        if (V.isEntity(merged)) this.addNewEntity(merged)\n        else return merged\n    }\n\n    merge(oldValue, newValue) {\n        if (isForeignKey(oldValue)) {\n            const nextEntity = this.getEntity(oldValue.entityType, oldValue[foreignKey])\n            this.merge(nextEntity, newValue)\n            return oldValue\n        }\n\n        const elements = V.getElements(newValue)\n        if (!elements) return newValue\n        if (this.getEntity(proxy, oldValue[proxy]).proxy === newValue) {\n            return oldValue\n        }\n        const ownSecretSymbols = Object.getOwnPropertySymbols(oldValue).filter(s => secretSymbols.includes(s))\n        ownSecretSymbols.forEach(s => newValue[s] = oldValue[s])\n        elements.forEach(\n            ([key, value]) => newValue[key] = this.merge(oldValue[key], value)\n        )\n        this.addToProxyRemovalList(newValue)\n        if (V.isEntity(newValue)) this.addNewEntity(newValue)\n        else return newValue\n\n    }\n\n    addToProxyRemovalList(entity) {\n        this._proxyRemovalList.add(entity[proxy])\n    }\n\n    addParentProxies(proxyId) {\n        const parents = this.getProxyParents(proxyId)\n        parents.forEach(pId => {\n            if (!this._proxyRemovalList.has(pId)) {\n                this._proxyRemovalList.add(pId)\n                this.addParentProxies(pId)\n            }\n        })\n    }\n\n    getProxyParents(proxyId) {\n        const parents = this._old[proxy][proxyId].parents\n        return Object.keys(parents)\n    }\n\n    clearProxies() {\n        let proxiesToRemove = this._proxyRemovalList.values()\n        for (let pId of proxiesToRemove) this.addParentProxies(pId)\n        proxiesToRemove = this._proxyRemovalList.values()\n        const newProxyTable = {}\n        Object.entries(this._old[proxy]).forEach(([key, table]) => newProxyTable[key] = { ...table })\n        for (let pId of proxiesToRemove) newProxyTable[pId].proxy = undefined\n        this._new[proxy] = newProxyTable\n    }\n\n    mergeInOldData() {\n        const tables = Object.entries(this._old)\n        tables.forEach(([tableName, table]) => {\n            if (!this._new[tableName]) this._new[tableName] = table\n            else this._new[tableName] = { ...table, ...this._new[tableName] }\n        })\n    }\n\n    getNewRoot() {\n        const type = this._oldRoot[entity]\n        const primaryKey = this._oldRoot[id]\n        return this._new[type][primaryKey]\n    }\n\n    getNewData() {\n        return this._new\n    }\n}\n\n//export\nfunction replace(oldNormalizedData, oldRoot, target, value) {\n    const newNorm = new NormalizedDataReplacement(oldNormalizedData, oldRoot)\n    const [{ [foreignKey]: entityId, entityType }, ...path] = newNorm.getPath(target)\n    const targetEntity = newNorm.getEntity(entityType, entityId)\n    newNorm.mergeAtPath(path, targetEntity, value)\n    newNorm.clearProxies()\n    newNorm.mergeInOldData()\n    const newNormData = newNorm.getNewData()\n    const newRoot = newNorm.getNewRoot()\n    return { normalizedData: newNormData, rootEntity: newRoot }\n}\n\nfunction insertAt(key, collection, value) {\n    if (V.typeOf(collection) === 'object') return { ...collection, [key]: value }\n    else if (V.typeOf(collection) === 'array') {\n        const firstHalf = collection.slice(0, key)\n        const secondHalf = collection.slice(key + 1)\n        return [...firstHalf, value, ...secondHalf]\n    }\n}\n\nfunction isForeignKey(data) {\n    if (V.typeOf(data) !== 'object') return false\n    const syms = Object.getOwnPropertySymbols(data)\n    return syms.includes(foreignKey)\n}\n\nmodule.exports = replace","const { entity, id, foreignKey, proxy } = require('./symbols')\nconst Validator = require('./validators')\nconst V = new Validator(entity)\nconst replace = require('./normalizedDataReplacement')\n\n\nclass NormalizedState {\n    constructor({ schema, normalizedData, rootEntity }) {\n        this.schema = schema\n        this.normalizedData = normalizedData\n        this.rootEntity = rootEntity\n    }\n\n    getEntity(type, primaryKey) {\n        return this.normalizedData[type][primaryKey]\n    }\n\n    getSchema() {\n        return this.schema\n    }\n\n    getRoot() {\n        return this.rootEntity\n    }\n\n    getNormalizedData() {\n        return this.normalizedData\n    }\n\n    getProxyFromCache(obj) {\n        const primaryKey = obj[proxy]\n        const proxyRecord = this.normalizedData[proxy][primaryKey]\n        return proxyRecord.proxy\n    }\n\n    setProxyInCache(obj, proxObj) {\n        const primaryKey = obj[proxy]\n        const proxyRecord = this.normalizedData[proxy][primaryKey]\n        proxyRecord.proxy = proxObj\n    }\n\n    replace(target, value) {\n        const { normalizedData, rootEntity } = replace(this.normalizedData, this.rootEntity, target, value)\n        const schema = this.schema\n        return new NormalizedState({ normalizedData, rootEntity, schema })\n    }\n}\n\nmodule.exports = NormalizedState","const { entity, id, proxy } = require('./symbols')\nconst Validator = require('./validators')\nconst V = new Validator(entity)\n\nclass SchemaCreator {\n    constructor() {\n        this._schema = { [proxy]: {} }\n    }\n\n    addType(entityObj) {\n        const tag = entityObj[entity]\n        V.validateTag(tag)\n        const name = V.getName(tag)\n        delete entityObj[entity]\n        if (!this._schema[name]) this._schema[name] = entityObj\n        else V.checkForInconsistencies(entityObj, this.schema[name], name)\n        return name\n    }\n\n    addVacantType(vacantEntity) {\n        const tag = vacantEntity[entity]\n        V.validateTag(tag)\n        const name = V.getName(tag)\n        if (!this._schema[name]) this._schema[name] = undefined\n        return name\n    }\n\n    getSchema() {\n        const tables = Reflect.ownKeys(this._schema)\n        V.checkForUndefinedEntities(this._schema)\n        tables.forEach(type => this._schema[type][id] = 0)\n        return this._schema\n    }\n}\n\nfunction createSchema(state) {\n    const schemaCreator = new SchemaCreator()\n    if (!state[entity]) state[entity] = 'ROOT'\n    process(state)\n    return schemaCreator.getSchema()\n\n\n    function process(state) {\n        if (V.typeOf(state) === 'array') return [process(state[0])]\n        if (V.typeOf(state) === 'object') {\n            if (V.isVacentTag(state)) return schemaCreator.addVacantType(state)\n            const obj = { ...state }\n            Object.entries(obj).forEach(\n                ([key, value]) => obj[key] = process(value)\n            )\n            return V.isEntity(obj) ? schemaCreator.addType(obj) : obj\n        } else return V.typeOf(state)\n    }\n}\n\nmodule.exports = createSchema","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","//hidden property access symbols\nconst { entity, id, foreignKey, getNormalized, getSchema, getRootData, replace, proxy, dataProxy, schemaProxy, normalizedProxy } = require('./symbols')\nconst secretSymbols = [entity, id, foreignKey, proxy, getNormalized, normalizedProxy, getSchema, schemaProxy, getRootData, dataProxy, replace]\nconst allowedKeyList = {\n    data: [],\n    schema: [entity],\n    normalized: [id, foreignKey]\n}\n\nconst Validator = require('./validators')\nconst V = new Validator(entity)\n\nconst createSchema = require('./createSchema')\nconst NormalizedState = require('./normalizedState')\nconst normalizeState = require('./normalizedDataCreation')\n\n//exported\nfunction processState(state) {\n    const schema = createSchema(state)\n    const data = normalizeState(schema, state)\n    const normalData = new NormalizedState(data)\n    return new StateProxy(normalData)\n}\n\nclass StateProxy {\n    constructor(normalizedData, proxyType = 'data') {\n        this._proxyType = proxyType\n        this._normalizedData = normalizedData\n        if (proxyType === 'data') return this._getProxy(normalizedData.getRoot())\n        if (proxyType === 'normalized') return this._getProxy(normalizedData.getNormalizedData())\n        if (proxyType === 'schema') return this._getProxy(normalizedData.getSchema())\n    }\n\n    _getProxy(obj) {\n        if (this._proxyType !== 'data') return this._createProxy(obj)\n        else {\n            let cachedProxy = this._normalizedData.getProxyFromCache(obj)\n            if (!cachedProxy) {\n                cachedProxy = this._createProxy(obj)\n                this._normalizedData.setProxyInCache(obj, cachedProxy)\n            }\n            return cachedProxy\n        }\n    }\n\n    _createProxy(obj) {\n        const allowedKeys = allowedKeyList[this._proxyType]\n        const handler = {\n            get: (target, prop) => {\n                if (prop === getNormalized) {\n                    return new StateProxy(this._normalizedData, 'normalized')\n                }\n                if (prop === getSchema) {\n                    return new StateProxy(this._normalizedData, 'schema')\n                }\n                if (prop === getRootData) return this._getProxy(this._normalizedData.getRoot())\n                if (prop === replace) return this._updateFn(target)\n                if (allowedKeys.includes(prop)) return this._lookupValue(target[prop])\n                if (secretSymbols.includes(prop)) return undefined\n                return this._lookupValue(target[prop])\n            },\n            ownKeys(target) {\n                const hiddenKeys = secretSymbols.filter(x => !allowedKeys.includes(x))\n                return Reflect.ownKeys(target).filter(x => !hiddenKeys.includes(x))\n            }\n        }\n        return new Proxy(obj, handler)\n    }\n\n    _updateFn(target) {\n        return (newValue) => {\n            const newNormalData = this._normalizedData.replace(target, newValue)\n            return new StateProxy(newNormalData)\n        }\n    }\n\n    _lookupValue(value) {\n        const type = V.typeOf(value)\n        if (type !== 'object' && type !== 'array') return value\n        if (type === 'object' && this._proxyType === 'data') {\n            const symbols = Object.getOwnPropertySymbols(value)\n            if (symbols.includes(foreignKey)) {\n                const linkedEntity = this._normalizedData.getEntity(value.entityType, value[foreignKey])\n                return this._getProxy(linkedEntity)\n            }\n        }\n        return this._getProxy(value)\n    }\n}\n\nmodule.exports = processState\n\n\n\n//TESTING\nconst state = {\n    numbers: [5, 7, 9],\n    thing: { prop1: 'hello', prop2: 'world' },\n}\n// const proxied = processState(state)\n// proxied.numbers[0]\n// const newState2 = proxied.thing[replace]({ prop1: 'goodbye', prop2: 'world' })\n// console.log('\\nreplaced state\\n', newState2)\n// console.log('\\nnormal data before lookup\\n', proxied[getNormalized].ROOT)\n// console.log('\\nproxied first\\n', proxied[getNormalized].ROOT)\n// newState2.numbers[0]\n// console.log(proxied[getSchema])\n// console.log(proxied.thing === proxied.thing)\n// console.log('\\nproxied after\\n', proxied[getNormalized].ROOT)\n// console.log('\\nproxied after\\n', proxied)\n// console.log('\\nnormal data after lookup\\n', proxied[getNormalized].ROOT)\n// proxied.numbers[0]\n// newState2.thing.prop1\n// console.log(proxied.thing)\n// const newState1 = proxied.numbers[replace]([1, 2])\n// console.log(newState1)\n// newState1.thing.prop1\n// console.log('\\nnew state 1 is \\n', newState1)\n// const newState2 = proxied.nu[replace]({ ...proxied.thing, prop1: 'goodbye' })\n// console.log('\\nnew state 2 is \\n', newState2)\n// console.log('\\nthe origional state is \\n', proxied)","function dfs(target, prevKey, obj, callback, path='') {\n  // Record the current path we've traversed to.\n  if (prevKey !== '') path += (path ? '_': '') + prevKey.toUpperCase();\n  // If we've found a target path call the callback\n  if ((path === target) || path.endsWith('_' + target)) {\n    callback(path)\n  } else {\n    // Traverse further through the object.\n    if (typeof obj !== 'object' || Array.isArray(obj)) return;\n    for (let key of Object.keys(obj)) {\n      dfs(target, key, obj[key], callback, path)\n    }\n  }\n}\n\nfunction findPath(path, obj) {\n  // Recieve a short text path and return an array of the target path.\n  if (path === undefined) return [];\n  let paths = [];\n  dfs(path, '', obj, (p) => paths.push(p))\n  return paths;\n}\n\nmodule.exports = findPath;","// function updateAtPath(path, obj, callback) {\n//   if (typeof obj !== 'object') return obj;\n//   const newObj = Object.assign({}, obj);\n//   for (let key of Object.keys(obj)) {\n//     if (key.toUpperCase() === path) {\n//       newObj[key] = callback(obj[key]);\n//     } else {\n//       newObj[key] = updateAtPath(path, obj[key], callback);\n//     }\n//   }\n//   return newObj;\n// }\nfunction updateAtPath(path, obj, callback) {\n  //if no path return updated state\n  if (path.length === 0) return callback(obj);\n\n  //base case no more object descendants\n  if (typeof obj !== 'object') return obj;\n\n  //make a copy\n  const newObj = Object.assign({}, obj);\n  for (let key of Object.keys(obj)) {\n    if (key.toUpperCase() === path[0]) {\n      newObj[key] = updateAtPath(path.slice(1), obj[key], callback);\n    }\n  }\n  return newObj;\n}\nmodule.exports = updateAtPath;","function actionTypeParser(actionType) {\n  const validActions = [\n    'SET_ALL',\n    'SET_IN',\n    'SET',\n    'INCREMENT_ALL',\n    'INCREMENT_IN',\n    'INCREMENT',\n    'DECREMENT_ALL',\n    'DECREMENT_IN',\n    'DECREMENT',\n    'TOGGLE_ALL',\n    'TOGGLE_IN',\n    'TOGGLE',\n    'ADD_TO',\n    'ADD',\n    'INSERT_IN',\n    'INSERT',\n    'REMOVE_ALL',\n    'REMOVE_FROM',\n    'REMOVE',\n    'MERGE_ALL',\n    'MERGE_IN',\n    'MERGE',\n  ];\n  let verb;\n  let path;\n  for (let action of validActions) {\n    if (actionType.startsWith(action)) {\n      verb = action;\n      path = actionType.replace(verb, '').replace('_', '');\n      return {verb, path}\n    }\n  }\n  return {verb, path} // Undefined if no match\n}\n\nmodule.exports = actionTypeParser;","const actionTypeParser = require('./functions/actionTypeParser');\nconst updateAtPath = require('./functions/updateAtPath');\nconst findPath = require('./functions/findPath');\nconst processState = require('./proxy')\nconst checkForEntities = require('./functions/checkForEntities')\nconst { replace } = require('./symbols')\nconst getPath = (path, state) => {\n  const paths = findPath(path, state);\n  if (paths.length === 0) throw new Error('Path not found.');\n  if (paths.length > 1) throw new Error('Path not unique, try a longer path specification.');\n  return paths[0].split('_');\n}\n\nfunction insert(state, values, action) {\n  if (values === undefined) return state;\n  if (Array.isArray(state)) {\n    if (action.index) {\n      return [\n        ...state.slice(0, action.index),\n        ...values,\n        ...state.slice(action.index)\n      ];\n    }\n    return [...state, ...values];\n  }\n  if (typeof state === \"object\") {\n    return Object.assign({ ...state }, values)\n  }\n}\n\nfunction update(state, callback, predicate) {\n  if (Array.isArray(state)) {\n    return state.map((elem, idx) => {\n      if (predicate === undefined || predicate(elem, idx)) return callback(elem);\n      return elem;\n    });\n  }\n  if (typeof state === 'object' && state !== null) {\n    const newObj = {};\n    Object.entries(state).map(([key, value]) => {\n      if (predicate === undefined || predicate(key, value)) newObj[key] = callback(key, value);\n      else newObj[key] = value;\n    });\n    return newObj;\n  }\n}\n\nfunction del(state, predicate) {\n  if (Array.isArray(state)) {\n    if (predicate === undefined) return [];\n    return state.filter((elem, index) => !predicate(elem, index));\n  }\n  if (typeof state === 'object' && state !== null) {\n    if (predicate === undefined) return {};\n    const newObj = {};\n    Object.entries(state).map(([key, value]) => {\n      if (!predicate(key, value)) newObj[key] = value;\n    });\n    return newObj;\n  }\n}\n\nfunction switch_number(state, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + action.value;\n    case 'DECREMENT':\n      return state - action.value;\n    case 'SET':\n      return action.value;\n    default:\n      return state;\n  }\n}\n\nfunction switch_boolean(state, action) {\n  switch (action.type) {\n    case 'SET':\n      return action.value;\n    case 'TOGGLE':\n      return !state;\n    default:\n      return state;\n  }\n}\n\nfunction switch_string(state, action) {\n  switch (action.type) {\n    case 'SET':\n      return action.value;\n    default:\n      return state;\n  }\n}\n\nfunction switch_array(state, action) {\n  switch (action.type) {\n    case 'ADD':\n      return [...state, action.value];\n    case 'CONCAT':\n      return [...state, ...action.value];\n    case 'REMOVE_ALL':\n      return del(state);\n    case 'REMOVE_IN':\n      if (action.where !== undefined) {\n        return del(state, action.where)\n      }\n      if (action.index === undefined) action.index = state.length - 1;\n      if (action.index !== undefined) {\n        return del(state, (e, i) => i === action.index);\n      }\n    case 'SET_IN':\n      if (action.index !== undefined) {\n        return update(state, () => action.value, (e, i) => i === action.index);\n      }\n      if (action.where !== undefined) {\n        return update(state, () => action.value, action.where);\n      }\n    case 'SET_ALL':\n      return update(state, () => action.value);\n    case 'TOGGLE_IN':\n      if (action.index !== undefined) {\n        return update(state, el => !el, (e, i) => i === action.index);\n      }\n      if (action.where !== undefined) {\n        return update(state, el => !el, action.where);\n      }\n    case 'TOGGLE_ALL':\n      return update(state, el => !el);\n    case 'INCREMENT_IN':\n      if (action.index !== undefined) {\n        return update(state, el => el + action.value, (e, i) => i === action.index);\n      }\n      if (action.where !== undefined) {\n        return update(state, el => el + action.value, action.where);\n      }\n    case 'DECREMENT_IN':\n      if (action.index !== undefined) {\n        return update(state, el => el - action.value, (e, i) => i === action.index);\n      }\n      if (action.where !== undefined) {\n        return update(state, el => el - action.value, action.where);\n      }\n    case 'UPDATE_IN':\n      return update(state, action.set, action.where);\n    case 'INSERT':\n      // return insert(state, action.values, action)\n    return [\n      ...state.slice(0, action.index),\n      action.value,\n      ...state.slice(action.index)\n    ];\n    case 'INCREMENT_ALL':\n      return update(state, el => el + action.value);\n    case 'DECREMENT_ALL':\n      return update(state, el => el - action.value);\n    case 'MERGE_ALL':\n      return update(\n        state,\n        obj => Object.assign({ ...obj }, action.value)\n      );\n    case 'MERGE_IN':\n      if (action.index !== undefined) {\n        return update(\n          state,\n          el => Object.assign({ ...el }, action.value),\n          (e, i) => i === action.index\n        );\n      }\n      if (action.where !== undefined) {\n        return update(\n          state,\n          el => Object.assign({ ...el }, action.value),\n          action.where\n        );\n      }\n    default:\n      return state;\n  }\n}\n\nfunction switch_object(state, action) {\n  let { verb, path } = actionTypeParser(action.type);\n  let newObj = {}\n\n  if (path) {\n    if (verb === 'SET') {\n      if (action.key !== undefined) {\n        return updateAtPath(\n          getPath(path, state),\n          state,\n          obj => { return { ...obj, [action.key]: action.value } }\n        );\n      }\n      if (action.where !== undefined) {\n        return updateAtPath(\n          getPath(path, state),\n          state,\n          (obj) => update(obj, () => action.value, action.where)\n        );\n      }\n      return updateAtPath(getPath(path, state), state, () => action.value)\n    }\n    if (verb === 'INCREMENT_ALL') {\n      return updateAtPath(\n        getPath(path, state),\n        state,\n        arr => update(arr, el => el + action.value)\n      );\n    }\n    if (verb === 'INCREMENT_IN') {\n      if (action.index !== undefined) {\n        return updateAtPath(\n          getPath(path, state),\n          state,\n          arr => update(arr, el => el + action.value, (e, i) => i === action.index)\n        );\n      }\n      if (action.where !== undefined) {\n        return updateAtPath(\n          getPath(path, state),\n          state,\n          (arr) => update(arr, el => el + action.value, action.where)\n        );\n      }\n    }\n    if (verb === 'DECREMENT_ALL') {\n      return updateAtPath(\n        getPath(path, state),\n        state,\n        arr => update(arr, el => el - action.value)\n      );\n    }\n    if (verb === 'DECREMENT_IN') {\n      if (action.index !== undefined) {\n        return updateAtPath(\n          getPath(path, state),\n          state,\n          (arr) => update(arr, el => el - action.value, (e, i) => i === action.index)\n        );\n      }\n      if (action.where !== undefined) {\n        return updateAtPath(\n          getPath(path, state),\n          state,\n          (arr) => update(arr, el => el - action.value, action.where)\n        );\n      }\n    }\n    if (verb === 'INCREMENT') {\n      return updateAtPath(\n        getPath(path, state),\n        state,\n        number => number + action.value\n      );\n    }\n    if (verb === 'DECREMENT') {\n      return updateAtPath(\n        getPath(path, state),\n        state,\n        number => number - action.value\n      );\n    }\n    if (verb === 'TOGGLE') {\n      return updateAtPath(getPath(path, state), state, (bool) => !bool);\n    }\n    if (verb === 'TOGGLE_IN') {\n      if (action.index !== undefined) {\n        return updateAtPath(\n          getPath(path, state),\n          state,\n          arr => update(arr, el => !el, (e, i) => i === action.index)\n        );\n      }\n      if (action.key !== undefined) {\n        return updateAtPath(\n          getPath(path, state),\n          state,\n          obj => update(obj, el => !el, (k, v) => k === action.key)\n        );\n      }\n      if (action.where !== undefined) {\n        return updateAtPath(getPath(path, state), state, (obj) => {\n          return update(obj, el => !el, action.where);\n        });\n      }\n    }\n\n    if (verb === 'MERGE') {\n      return updateAtPath(\n        getPath(path, state),\n        state,\n        obj => { return Object.assign({ ...obj }, action.value) }\n      );\n    }\n\n    if (verb === 'MERGE_IN') {\n      return updateAtPath(getPath(path, state), state, (obj) => {\n        if (Array.isArray(obj)) {\n          if (action.index) {\n            let newState = [...obj];\n            newState[action.index] = Object.assign({ ...newState[action.index] }, action.value);\n            return newState;\n          }\n\n          if (action.where) {\n            return obj.map(value => {\n              if (action.where(value)) {\n                // Special case to merge object props instead of setting the value.\n                if (typeof value === 'object') return Object.assign({ ...value }, action.value);\n                return action.value;\n              }\n              return value;\n            });\n          }\n        }\n        if (typeof obj === 'object') {\n          if (action.key !== undefined && typeof action.value === 'object') return { ...obj, [action.key]: Object.assign({ ...obj[action.key] }, action.value) };\n          if (action.key !== undefined) return { ...obj, [action.key]: action.value };\n          if (action.where !== undefined) {\n            Object.entries(obj).forEach(([key, subObj]) => {\n              if (action.where(key, subObj)) {\n                newObj[key] = Object.assign({ ...subObj }, action.value);\n              }\n              else newObj[key] = { ...subObj }\n            })\n            return newObj;\n          }\n        }\n      });\n    }\n    if (verb === 'MERGE_ALL') {\n      return updateAtPath(getPath(path, state), state, (obj) => {\n        Object.entries(obj).forEach(([key, subObj]) => {\n          if (Array.isArray(subObj)) newObj[key] = [...subObj]\n          else newObj[key] = Object.assign({ ...subObj }, action.value);\n        })\n        return newObj;\n      });\n    }\n    if (verb === 'ADD_TO') {\n      return updateAtPath(getPath(path, state), state, (arr) => [...arr, action.value]);\n    }\n    if (verb === 'INSERT_IN') {\n      return updateAtPath(getPath(path, state), state, (arr) => [...arr.slice(0, action.index), action.value, ...arr.slice(action.index)]);\n    }\n    if (verb === 'REMOVE_ALL') {\n      return updateAtPath(getPath(path, state), state, (arr) => del(arr));\n    }\n    if (verb === 'REMOVE_FROM') {\n      if (action.index !== undefined) {\n        return updateAtPath(\n          getPath(path, state),\n          state,\n          (arr) => del(arr, (e, i) => i === action.index)\n        );\n      }\n      if (action.where !== undefined) {\n        return updateAtPath(\n          getPath(path, state),\n          state,\n          (arr) => del(arr, action.where)\n        );\n      }\n    }\n    if (verb === 'SET_ALL') {\n      return updateAtPath(\n        getPath(path, state),\n        state,\n        arr => update(arr, el => action.value)\n      );\n    }\n    if (verb === 'SET_IN') {\n      if (action.index !== undefined) {\n        return updateAtPath(\n          getPath(path, state),\n          state,\n          arr => update(arr, () => action.value, (e, i) => i === action.index)\n        );\n      }\n      if (action.where !== undefined) {\n        return updateAtPath(\n          getPath(path, state),\n          state,\n          arr => update(arr, () => action.value, action.where)\n        );\n      }\n    }\n    if (verb === 'TOGGLE_ALL') {\n      return updateAtPath(\n        getPath(path, state),\n        state,\n        arr => update(arr, bool => !bool)\n      );\n    }\n  }\n  switch (action.type) {\n    case 'SET_ALL':\n      return update(state, () => action.value)\n    case 'SET_IN':\n      if (action.key !== undefined) {\n        return insert(state, { [action.key]: action.value });\n      }\n      if (action.where !== undefined) {\n        return update(state, () => action.value, action.where);\n      }\n    case 'MERGE_IN':\n      if (action.key !== undefined) {\n        return update(\n          state,\n          (key, subObj) => Object.assign({ ...subObj }, action.value),\n          (k, v) => k === action.key\n        );\n      }\n      if (action.where !== undefined) {\n        return update(\n          state,\n          (key, subObj) => Object.assign({ ...subObj }, action.value),\n          action.where\n        );\n      }\n    case 'MERGE_ALL':\n      return update(\n        state,\n        (key, subObj) => Object.assign({ ...subObj }, action.value)\n      );\n    case 'MERGE':\n      return insert(state, action.value)\n    case 'REMOVE_ALL':\n      return del(state);\n    case 'REMOVE_IN':\n      if (action.key !== undefined) {\n        return del(state, (k, v) => k === action.key);\n      }\n      if (action.where !== undefined) {\n        return del(state, action.where);\n      }\n    case 'INCREMENT_IN':\n      if (action.key !== undefined) {\n        return update(state, (k, v) => v + action.value, (key) => key === action.key);\n      }\n      if (action.where !== undefined) {\n        return update(state, (k, v) => v + action.value, action.where);\n      }\n    case 'DECREMENT_IN':\n      if (action.key !== undefined) {\n        return update(state, (k, v) => v - action.value, (key) => key === action.key);\n      }\n      if (action.where !== undefined) {\n        return update(state, (k, v) => v - action.value, action.where);\n      }\n    case 'TOGGLE_IN':\n      if (action.key !== undefined) {\n        return update(state, (k, bool) => !bool, (key) => key === action.key);\n      }\n      if (action.where !== undefined) {\n        return update(state, (k, bool) => !bool, action.where);\n      }\n    case 'TOGGLE_ALL':\n      return update(\n        state,\n        (k, bool) => !bool\n      );\n    default:\n      return state;\n  }\n}\n\nfunction checkPath(path, state) {\n  if (path) {\n    let paths = findPath(path, state);\n    if (paths.length === 0) throw new Error(`Path: ${path} could not be found.`);\n    if (paths.length > 1) throw new Error(`Multiple valid paths found. Use a longer path to ensure a unique selection.`)\n  }\n}\nfunction validatePayload(action, payload, required) {\n  if (!payload) return;\n  if (required.includes('value') && !('value' in payload)) {\n    throw new Error(`${action} should include a value property in the payload.`)\n  }\n  if (required.includes('in')\n    && payload.index === undefined\n    && payload.key === undefined\n    && payload.where === undefined) {\n    throw new Error(`${action} should include either a key, index, or where property in the payload.`)\n  }\n  if (required.includes('index') && payload.index === undefined) {\n    throw new Error(`${action} should include either a key or index property in the payload.`)\n  }\n}\nfunction handleAction(action, config, required, state) {\n  if (!config) throw new Error('All actions need to have a configuration object.');\n  checkPath(config.path, state);\n  validatePayload(action, config, required);\n  // Final configuration for action\n  let path = config.path;\n  delete config['path'];\n  if (path) return Object.assign({ type: `${action}_${path}` }, config);\n  return Object.assign({ type: action }, config);\n}\n\nclass Actions {\n  constructor(closedState) {\n    this.closedState = closedState;\n  }\n  SET_ALL(config) {\n    return handleAction('SET_ALL', config, ['value'], this.closedState.state);\n  }\n  SET_IN(config) {\n    return handleAction('SET_IN', config, ['value', 'in'], this.closedState.state);\n  }\n  SET(config) {\n    return handleAction('SET', config, ['value'], this.closedState.state);\n  }\n  INCREMENT_ALL(config) {\n    return handleAction('INCREMENT_ALL', config, ['value'], this.closedState.state);\n  }\n  INCREMENT_IN(config) {\n    return handleAction('INCREMENT_IN', config, ['value', 'in'], this.closedState.state);\n  }\n  INCREMENT(config) {\n    return handleAction('INCREMENT', config, ['value'], this.closedState.state);\n  }\n  DECREMENT_ALL(config) {\n    return handleAction('DECREMENT_ALL', config, ['value'], this.closedState.state);\n  }\n  DECREMENT_IN(config) {\n    return handleAction('DECREMENT_IN', config, ['value', 'in'], this.closedState.state);\n  }\n  DECREMENT(config) {\n    return handleAction('DECREMENT', config, ['value'], this.closedState.state);\n  }\n  TOGGLE_ALL(config) {\n    return handleAction('TOGGLE_ALL', config, [], this.closedState.state);\n  }\n  TOGGLE_IN(config) {\n    return handleAction('TOGGLE_IN', config, ['in'], this.closedState.state);\n  }\n  TOGGLE(config) {\n    return handleAction('TOGGLE', config, [], this.closedState.state);\n  }\n  ADD_TO(config) {\n    return handleAction('ADD_TO', config, ['value'], this.closedState.state);\n  }\n  ADD(config) {\n    return handleAction('ADD', config, ['value'], this.closedState.state);\n  }\n  INSERT_IN(config) {\n    return handleAction('INSERT_IN', config, ['value', 'in'], this.closedState.state);\n  }\n  INSERT(config) {\n    return handleAction('INSERT', config, ['value'], this.closedState.state);\n  }\n  UPDATE_IN(config) {\n    return handleAction('UPDATE_IN', config, ['in'], this.closedState.state);\n  }\n  REMOVE_ALL(config) {\n    return handleAction('REMOVE_ALL', config, [], this.closedState.state);\n  }\n  REMOVE_IN(config) {\n    return handleAction('REMOVE_IN', config, ['in'], this.closedState.state);\n  }\n  REMOVE(config) {\n    return handleAction('REMOVE', config, [], this.closedState.state);\n  }\n  MERGE_ALL(config) {\n    return handleAction('MERGE_ALL', config, ['value'], this.closedState.state);\n  }\n  MERGE_IN(config) {\n    return handleAction('MERGE_IN', config, ['value', 'in'], this.closedState.state);\n  }\n  MERGE(config) {\n    return handleAction('MERGE', config, ['value'], this.closedState.state);\n  }\n}\n\nclass Container {\n  constructor() {\n    this.closedState = {};\n    this.deduce = (reducer) => {\n      const initialState = reducer(undefined, {})\n      const shouldNormalize = checkForEntities(initialState)\n      let proxied = shouldNormalize && processState(initialState)\n      return (state, action) => {\n        let update = reducer(state, action);\n        proxied = shouldNormalize ? proxied[replace](update) : update\n        this.closedState.state = proxied;\n        if (proxied !== state) return proxied;\n        if (typeof state === 'number') {\n          this.closedState.state = switch_number(state, action)\n          return this.closedState.state;\n        }\n        if (typeof state === 'boolean') {\n          this.closedState.state = switch_boolean(state, action);\n          return this.closedState.state;\n        }\n        if (typeof state === 'string') {\n          this.closedState.state = switch_string(state, action);\n          return this.closedState.state;\n        }\n        if (Array.isArray(state)) {\n          this.closedState.state = switch_array(state, action);\n          return this.closedState.state;\n        }\n        if (typeof state === 'object') {\n          this.closedState.state = switch_object(state, action);\n          return this.closedState.state;\n        }\n      }\n    };\n    this.actions = new Actions(this.closedState);\n  }\n}\n\nconst container = new Container();\nmodule.exports = {\n  deduce: container.deduce,\n  D: container.actions\n};"],"sourceRoot":""}